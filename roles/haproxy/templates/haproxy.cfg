global
  log stdout daemon
  nbthread 4
  stats socket /run/haproxy/admin mode 660 level admin expose-fd listeners
  stats socket /run/haproxy/user mode 660 level user expose-fd listeners
  stats socket /run/haproxy/operator mode 660 level operator expose-fd listeners
  stats timeout 30s
  user haproxy
  group haproxy
  ca-base /var/lib/haproxy/ca-certs
  crt-base /var/lib/haproxy/certs
  ssl-default-server-options ssl-min-ver TLSv1.3
  ssl-default-bind-options ssl-min-ver TLSv1.3
  ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256

defaults
  log global
  timeout client 1h
  timeout client-fin 30s
  timeout connect 10s
  timeout http-request 10s
  timeout queue 1m
  timeout server 1h
  timeout tunnel 24h
  default-server init-addr last,libc,none observe layer4 error-limit 10 on-error mark-down

peers cluster
  bind {{ node_address }}:4280 ssl crt stats.bundle
{% for peer in groups['load_balancer'] %}
{% if peer == inventory_hostname %}
  server {{ hostvars[peer].node_name }}
{% else %}
  server {{ hostvars[peer].node_name }} {{ hostvars[peer].node_address }}:4280 ssl ca-file root.crt
{% endif %}
{% endfor %}

frontend stats_frontend
  mode http
  option httplog
  option dontlog-normal
  bind {{ node_address }}:443 ssl crt stats.bundle
  stats enable
  stats uri /?stats

{% if 'vault' in groups %}
frontend vault_api_frontend
  bind {{ load_balancer_address }}:8200
  default_backend vault_api_backend

backend vault_api_backend
{% for node in groups['vault'] %}
  server {{ hostvars[node].node_name }} {{ hostvars[node].node_address }}:8200 check
{% endfor %}

frontend vault_cluster_frontend
  bind {{ load_balancer_address }}:8201
  default_backend vault_cluster_backend

backend vault_cluster_backend
{% for node in groups['vault'] %}
  server {{ hostvars[node].node_name }} {{ hostvars[node].node_address }}:8201 check
{% endfor %}
{% endif %}

{% if 'dns' in groups %}
backend dns_backend
{% for node in groups['dns'] %}
  server {{ hostvars[node].node_name }} {{ node }}:8080 check
{% endfor %}
  option httpchk GET /health HTTP/1.0
{% endif %}

{% if 'storage' in groups %}
frontend minio_frontend
  bind {{ load_balancer_address }}:9000
  default_backend minio_backend

backend minio_backend
{% for node in groups['storage'] %}
  server {{ hostvars[node].node_name }} {{ node }}:9000 check
{% endfor %}

frontend minio_console_frontend
  bind {{ load_balancer_address }}:9001
  default_backend minio_console_backend

backend minio_console_backend
{% for node in groups['storage'] %}
  server {{ hostvars[node].node_name }} {{ node }}:9001 check
{% endfor %}
{% endif %}

{% if 'etcd' in groups %}
frontend etcd_frontend
  bind {{ load_balancer_address }}:2379
  default_backend etcd_backend

backend etcd_backend
{% for node in groups['etcd'] %}
  server {{ hostvars[node].node_name }} {{ node }}:2379 check port 2378
{% endfor %}
  option httpchk GET /health HTTP/1.0
{% endif %}

{% if 'control_plane' in groups %}
frontend apiserver_frontend
  bind {{ load_balancer_address }}:6443
  default_backend apiserver_backend

backend apiserver_backend
{% for node in groups['control_plane'] %}
  server {{ hostvars[node].node_name }} {{ node }}:6443 check
{% endfor %}

backend controller_manager_backend
{% for node in groups['control_plane'] %}
  server {{ hostvars[node].node_name }} {{ node }}:10257 check check-ssl ca-file root.crt
{% endfor %}
  option httpchk GET /healthz HTTP/1.0

backend scheduler_backend
{% for node in groups['control_plane'] %}
  server {{ hostvars[node].node_name }} {{ node }}:10259 check check-ssl ca-file root.crt
{% endfor %}
  option httpchk GET /healthz HTTP/1.0

frontend konnectivity_server_frontend
  bind {{ load_balancer_address }}:8131
  default_backend konnectivity_server_backend

backend konnectivity_server_backend
{% for node in groups['control_plane'] %}
  server {{ hostvars[node].node_name }} {{ node }}:8131 check port 8134
{% endfor %}
  option httpchk GET /healthz HTTP/1.0

frontend konnectivity_agents_frontend
  bind {{ load_balancer_address }}:8132
  default_backend konnectivity_agents_backend

backend konnectivity_agents_backend
{% for node in groups['control_plane'] %}
  server {{ hostvars[node].node_name }} {{ node }}:8132 check port 8134
{% endfor %}
  option httpchk GET /healthz HTTP/1.0

frontend konnectivity_admin_frontend
  bind {{ load_balancer_address }}:8133
  default_backend konnectivity_admin_backend

backend konnectivity_admin_backend
{% for node in groups['control_plane'] %}
  server {{ hostvars[node].node_name }} {{ node }}:8133 check port 8134
{% endfor %}
  option httpchk GET /healthz HTTP/1.0
{% endif %}

{% if 'worker' in groups %}
backend kubelet_backend
{% for node in groups['worker'] %}
  server {{ hostvars[node].node_name }} {{ node }}:10248 check
{% endfor %}
  option httpchk GET /healthz

backend kube_router_backend
{% for node in groups['worker'] %}
  server {{ hostvars[node].node_name }} {{ node }}:20244 check
{% endfor %}
  option httpchk GET /healthz
{% endif %}

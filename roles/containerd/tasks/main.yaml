- name: Makefile
  ansible.builtin.template:
    src: containerd.mk
    dest: /root/Makefile.d/containerd.mk

- name: config directory
  ansible.builtin.file:
    path: /etc/containerd
    state: directory

- name: containerd config
  notify: restart cri
  ansible.builtin.template:
    src: config.toml
    dest: /etc/containerd/config.toml

- name: configure modprobe
  ansible.builtin.copy:
    content: |
      overlay
      br_netfilter
    dest: /etc/modules-load.d/kube.conf

- name: load modules
  loop: [overlay, br_netfilter]
  changed_when: no
  ansible.builtin.command:
    cmd: "modprobe {{ item }}"

- name: sysctl
  notify: restart cri
  loop:
    - { name: net.bridge.bridge-nf-call-iptables, value: 1 }
    - { name: net.bridge.bridge-nf-call-ip6tables, value: 1 }
    - { name: net.ipv4.ip_forward, value: 1 }
    - { name: net.ipv6.conf.all.forwarding, value: 1 }
  loop_control:
    label: "{{ item.name }} = {{ item.value }}"
  ansible.builtin.sysctl:
    sysctl_file: /etc/sysctl.d/kube.conf
    state: present
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    reload: yes

- name: containerd binaries
  notify: restart cri
  loop:
    - containerd
    - containerd-shim
    - containerd-shim-runc-v1
    - containerd-shim-runc-v2
  ansible.builtin.copy:
    src: "containerd-{{ containerd_version }}-{{ node_arch }}/{{ item }}"
    dest: /usr/bin/
    mode: 0755

- name: service
  notify: restart cri
  ansible.builtin.template:
    src: containerd.service
    dest: /etc/systemd/system/containerd.service

- name: kubelet override directory
  ansible.builtin.file:
    path: /etc/systemd/system/kubelet.service.d
    state: directory

- name: kubelet override
  notify: restart kubelet
  ansible.builtin.template:
    src: kubelet.conf
    dest: /etc/systemd/system/kubelet.service.d/cri.conf

- name: crictl config
  ansible.builtin.template:
    src: crictl.yaml
    dest: /etc/crictl.yaml

- name: start
  ansible.builtin.systemd:
    name: containerd.service
    state: started
    enabled: yes
    masked: no
    daemon_reload: yes

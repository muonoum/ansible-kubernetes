apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-server
  labels:
    k8s-app: metrics-server

spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: metrics-server
  strategy:
    rollingUpdate:
      maxUnavailable: 0

  template:
    metadata:
      labels:
        k8s-app: metrics-server

    spec:
      priorityClassName: system-cluster-critical
      serviceAccountName: metrics-server
      nodeSelector:
        kubernetes.io/os: linux

      volumes:
        - name: tmp-dir
          emptyDir: {}
        - name: extension-apiserver-authentication
          configMap:
            name: extension-apiserver-authentication
            items:
              - key: requestheader-client-ca-file
                path: requestheader-client-ca.crt
              - key: client-ca-file
                path: client-ca.crt
        - name: kube-root-ca
          configMap:
            name: kube-root-ca.crt
            items:
              - key: ca.crt
                path: ca.crt

      containers:
        - name: metrics-server
          image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2
          imagePullPolicy: IfNotPresent
          args:
            - --cert-dir=/tmp
            - --secure-port=4443
            - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
            - --kubelet-use-node-status-port
            - --kubelet-certificate-authority=/kube-root-ca/ca.crt
            - --client-ca-file=/extension-apiserver-authentication/client-ca.crt
            - --requestheader-client-ca-file=/extension-apiserver-authentication/requestheader-client-ca.crt

          livenessProbe:
            failureThreshold: 3
            periodSeconds: 10
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS

          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 10
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS

          ports:
            - containerPort: 4443
              name: https
              protocol: TCP

          resources:
            requests:
              cpu: 100m
              memory: 200Mi

          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000

          volumeMounts:
            - name: tmp-dir
              mountPath: /tmp
            - name: extension-apiserver-authentication
              mountPath: /extension-apiserver-authentication
            - name: kube-root-ca
              mountPath: /kube-root-ca





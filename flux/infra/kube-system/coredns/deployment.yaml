apiVersion: apps/v1
kind: Deployment

metadata:
  labels:
    kubernetes.io/name: CoreDNS
    kubernetes.io/cluster-service: "true"
    k8s-app: kube-dns
  name: coredns

spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1

  selector:
    matchLabels:
      k8s-app: kube-dns

  template:
    metadata:
      labels:
        k8s-app: kube-dns

    spec:
      dnsPolicy: Default
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns

      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: k8s-app
                      operator: In
                      values: [kube-dns]

      volumes:
        - name: config-volume
          configMap:
            name: coredns
            items:
              - key: Corefile
                path: Corefile

      containers:
        - name: coredns
          image: registry.k8s.io/coredns/coredns:v1.9.3
          imagePullPolicy: IfNotPresent
          args: [-conf, /etc/coredns/Corefile]

          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              add: [NET_BIND_SERVICE]
              drop: [all]

          resources:
            limits:
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 70Mi

          volumeMounts:
            - name: config-volume
              mountPath: /etc/coredns
              readOnly: true

          ports:
            - containerPort: 53
              name: dns
              protocol: UDP
            - containerPort: 53
              name: dns-tcp
              protocol: TCP
            - containerPort: 9153
              name: metrics
              protocol: TCP

          livenessProbe:
            initialDelaySeconds: 60
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP

          readinessProbe:
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
